---
// Cielo nocturno con campo de estrellas parpadeantes suaves.
// Se aumenta el conteo y se introduce una amplitud de destello por estrella.
const count = 220; // número de estrellas (antes 120)
const stars = Array.from({ length: count });
---
<div class="absolute inset-0 -z-30 overflow-hidden bg-[#050814]">
  {stars.map((_, i) => {
    const seed = i + 13;
    const x = (seed * 73) % 100; // porcentaje left
    const y = (seed * 41) % 100; // porcentaje top
    const baseSize = 1 + (seed * 29) % 3; // 1 - 3 px
    const isGold = seed % 7 === 0; // cada 7ma estrella será dorada
    const size = isGold ? baseSize + 2 : baseSize;
    const delay = (seed * 97) % 8000; // ms
    const duration = 3000 + ((seed * 131) % 7000); // 3s - 10s
    const opacity = 0.3 + ((seed * 17) % 50) / 100; // 0.3 - 0.8 base
    const amp = (0.5 + ((seed * 59) % 100) / 100) * (isGold ? 1.25 : 1); // doradas un poco más brillantes
    const bg = isGold
      ? 'radial-gradient(circle,#fff7d1,#ffd24d,#e6a400)'
      : 'radial-gradient(circle,#ffffff,#ffffffcc)';
    return (
      <span
        class={`star absolute rounded-full ${isGold ? 'gold' : ''}`}
        style={`left:${x}%;top:${y}%;width:${size}px;height:${size}px;--delay:${delay}ms;--duration:${duration}ms;--opacity:${opacity};--amp:${amp};--bg:${bg};`}
      />
    );
  })}
</div>
<style>
  .star { background: var(--bg, radial-gradient(circle,#ffffff,#ffffffcc)); opacity:0; animation: twinkle var(--duration) ease-in-out infinite, microflicker 1.8s linear infinite; animation-delay: var(--delay); mix-blend-mode:screen; }
  .star.gold { filter: brightness(1.15) saturate(1.2); }
  @keyframes twinkle { 
    0%,100% { opacity:0; transform:scale(.35);} 
    8% {opacity:calc(var(--opacity)*var(--amp)); transform:scale(.55);} 
    40% {opacity:calc(var(--opacity)*var(--amp)*0.55);} 
    60% {opacity:calc(var(--opacity)*var(--amp));}
    85% {opacity:calc(var(--opacity)*var(--amp)*0.7);} 
  }
  @keyframes microflicker {
    0%,100% { filter:brightness(1); }
    45% { filter:brightness(1.15); }
    50% { filter:brightness(0.85); }
    70% { filter:brightness(1.25); }
  }
</style>
